import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import * as dotenvx from '@dotenvx/dotenvx';

// Get directory name in ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Create environments directory if it doesn't exist
const environmentsDir = path.join(__dirname, '..', 'src', 'environments');
if (!fs.existsSync(environmentsDir)) {
  fs.mkdirSync(environmentsDir, { recursive: true });
}

// Get API keys using dotenvx (same approach as in getSampleData.js)
const googleMapsApiKey = dotenvx.get('GOOGLE_MAPS_API_KEY');

// Get current environment from Vercel if available
const environment = process.env.VERCEL_ENV || 'development';
const isProduction = environment === 'production';

// Create environment.ts content
const environmentContent = `// This file is auto-generated by scripts/generate-env.js
// Do not edit directly

export const environment = {
  production: ${isProduction},
  environment: '${environment}',
  googleMaps: {
    apiKey: '${googleMapsApiKey || ''}',
  },
};
`;

// Write the environment.ts file
const environmentFilePath = path.join(environmentsDir, 'environment.ts');
fs.writeFileSync(environmentFilePath, environmentContent);

console.log(`Generated environment.ts in ${environmentsDir}`);

